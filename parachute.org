#+TITLE Parachute: a zero knowledge backup system
* Installation
** Place chute.asd in ASDF3 system registry
#+BEGIN_SRC
    mkdir -p ~/.config/common-lisp/source-registry.conf.d/
    cp chute.conf ~/.config/common-lisp/source-registry.conf.d/
#+END_SRC    

** Loading from ASDF
#+BEGIN_SRC
    (asdf:load-system :chute)
#+END_SRC    

** Testing from ASDF
#+BEGIN_SRC
    (asdf:test-system :chute)
#+END_SRC    

** Loading Quicklisp dependencies

#+BEGIN_SRC
     wget https://beta.quicklisp.org/quicklisp.lisp
     (load "~/quicklisp.lisp")
#+END_SRC    
#+BEGIN_SRC
    (load (asdf:system-relative-pathname 
       (asdf:find-system :chute) "quicklisp-setup"))
#+END_SRC    

** TODO BTRFS volume must have ".snapshot/" directory
The CHUTE:SNAPSHOT command will create snapshots under a the specified
volume (by default "/opt/cloudfleet/data") in a sub-directory named
".snapshot/", i.e. for the default in
"/opt/cloudfleet/data/.snapshot/<TIMESTAMP>".

Therefore, the "/opt/cloudfleet/data/.snapshot/" must exist and be
owned by root.  Currently this is done once per node as part of
installation when "setup/add-subvolume.bash" is executed.  It should
be made part of the setup done by setting up the encrypted volumes.

* Tasks (incomplete)
** DONE make a hard link to btrfs, setuid
   CLOSED: [2015-10-27 Tue 12:44]
   - CLOSING NOTE [2015-10-27 Tue 12:44] \\
     Done as setup/make-suid-btfs.bash

** TODO parse id for PUT uri from POST
* Transfer
** PUT n bytes in m windows

Each chunk of a blob is adressed as a URI of the form:

#+BEGIN_SRC
    .../<timestamp>/<hash>/<n-bytes>/<mth-window>
#+END_SRC

MIME type is "application/octet-stream".


* Client platform arm32
** CCL 
http://trac.clozure.com/ccl/wiki/PlatformNotes
* Server platform x64
** SBCL
sbcl-1.3.0 known to work

* Bugs
**  BTRFS/SEND
*** DONE stdout/stderr mixing
    CLOSED: [2015-11-14 Sat 10:16]
    - CLOSING NOTE [2015-11-14 Sat 10:16] \\
      Fixed by specifying separate error/output arguments to CCL:RUN-PROGAM
SBCL/CCL returning different starts of output stream.  CCL contains
"At subvolume" which means it is mixing stdout/stderr?

*** DONE Use octet streams
    CLOSED: [2015-11-19 Thu 10:47]
    - CLOSING NOTE [2015-11-19 Thu 10:47] \\
      Resolved by use of octets streams directly on MAKE-BLOB
We should pass the streams we wish to read from, rather than having
RUN-PROGAM construct them for us.

Unfortunately, this doesn't seem to work:
#+BEGIN_SRC lisp
  (ccl:run-program
     "/bin/ls" nil
     :wait nil
     :output (ironclad:make-octet-input-stream
             (make-array 16 :element-type '(unsigned-byte 8)))
     :element-type '(unsigned-byte 8))
#+END_SRC

complaining about

#+BEGIN_ASCII
There is no applicable method for the generic function:
  #<STANDARD-GENERIC-FUNCTION STREAM-WRITE-VECTOR #x30200006518F>
when called with arguments:
  (#<IRONCLAD::OCTET-INPUT-STREAM #x3020023CA75D> "chute
LICENSE
parachute.org
setup
...
#+END_ASCII

Fortunately, CCL:RUN-PROGRAM takes an :ELEMENT-TYPE keyword which
allows us to get octet streams out of the subprocesses.

** TODO Read key from key device
** TODO Initialize nonce from random data
** TODO Read domain from /opt/cloudfleet/data/config/blimp-vars.sh
** DONE MAKE-NEW-DIRECTORY 
   CLOSED: [2015-12-13 Sun 10:40]
   - CLOSING NOTE [2015-12-13 Sun 10:40] \\
     Use CL-FAD routines instead of ASDF.
Fails until run from the REPL.  Unsure what this entails.
* Colophon
        <mark@evenson.eu>
        Created: 01-OCT-2015
        Revised: 23-NOV-2015
